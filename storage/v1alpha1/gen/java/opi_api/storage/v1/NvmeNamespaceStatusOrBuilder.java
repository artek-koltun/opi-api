// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frontend_nvme.proto

package opi_api.storage.v1;

public interface NvmeNamespaceStatusOrBuilder extends
    // @@protoc_insertion_point(interface_extends:opi_api.storage.v1.NvmeNamespaceStatus)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * State of the namespace object, (enabled, disable, deleting)
   * </pre>
   *
   * <code>.opi_api.storage.v1.NvmeNamespaceStatus.State state = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   * @return The enum numeric value on the wire for state.
   */
  int getStateValue();
  /**
   * <pre>
   * State of the namespace object, (enabled, disable, deleting)
   * </pre>
   *
   * <code>.opi_api.storage.v1.NvmeNamespaceStatus.State state = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   * @return The state.
   */
  opi_api.storage.v1.NvmeNamespaceStatus.State getState();

  /**
   * <pre>
   * Operational state of the namespace object, (connected, disconnected)
   * </pre>
   *
   * <code>.opi_api.storage.v1.NvmeNamespaceStatus.OperState oper_state = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   * @return The enum numeric value on the wire for operState.
   */
  int getOperStateValue();
  /**
   * <pre>
   * Operational state of the namespace object, (connected, disconnected)
   * </pre>
   *
   * <code>.opi_api.storage.v1.NvmeNamespaceStatus.OperState oper_state = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   * @return The operState.
   */
  opi_api.storage.v1.NvmeNamespaceStatus.OperState getOperState();
}
